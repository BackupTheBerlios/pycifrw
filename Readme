                          PyCIFRW Readme
                          --------------

Introduction
------------

PyCIFRW provides basic support for reading and writing CIF (Crystallographic
Information Format) files using Python.  It was developed at the Australian
National Beamline Facility (ANBF), run by the Australian Synchrotron Research
Program (ASRP), as part of a larger project to provide CIF input/output 
capabilities for data collection.  It is currently under active 
development and testing.  

Supported Platforms
-------------------

PyCIFRW is written entirely in Python.  While this makes parsing of large
CIF files rather slow, it will run wherever Python runs.  It has been
tested on Unix (Linux,Solaris) and Windows 95/98 under Python 1.5.2 and
Python 2.0.  Macintoshes will probably have trouble with the Unix-style line 
termination of the .py files.

Files
-----

PyCiFRW consists of the following files:

Original files:

CifFile.py                     Defines the CifFile module for Python
CifFile.nw                     Noweb file from which CifFile.py is obtained
CifFile.html                   Programming notes for CifFile derived also from
                               CifFile.nw
kwCifParse.py                  Cif grammar specifications for kjParsing
kwCifParse.html                Programming notes for kwCifParse
kwCifParse.nw                  Noweb file
Makefile                       How to derive .html and .py files from .nw files

Files derived from other programs:

kjCParseBuild.py               Somewhat enhanced part of the kjParsing package
kjCParser.py                   Somewhat enhanced part of the kjParsing package
kjSet.py                       Original file from kjParsing package

Installation
------------

All .py files should be placed in a directory where python can find them, for
example .../lib/python/site-packages/PyCifRW

Use
---

See the text in CifFile.html for details of the interface

Example
-------

To read in a CIF:
>> from CifFile import *
>> cf = CifFile('jun_01_2.cif')

to access information in a CIF

>> wav = cf['si_std']['_diffrn_meas_wavelength']

to set a value

>> cf['si_std']['_diffrn_meas_wavelength'] = 1.54

